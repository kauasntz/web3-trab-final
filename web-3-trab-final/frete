// FreteApplication.java
package com.frete;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.graphql.data.method.annotation.Argument;
import org.springframework.graphql.data.method.annotation.QueryMapping;
import org.springframework.stereotype.Controller;

@SpringBootApplication
public class FreteApplication {
    public static void main(String[] args) {
        SpringApplication.run(FreteApplication.class, args);
    }
}

// FreteController.java
@Controller
public class FreteController {

    @QueryMapping
    public FreteResponse calcularFrete(@Argument int quilometragem, @Argument String tipoVeiculo) {
        TipoVeiculo veiculo = TipoVeiculo.valueOf(tipoVeiculo.toUpperCase());
        
        double valorBase = quilometragem <= 100 ? 
            quilometragem * veiculo.getPrecoPorKm() : 
            100 * veiculo.getPrecoPorKm() + (quilometragem - 100) * veiculo.getPrecoPorKm() * 0.8;
            
        double valorTotal = valorBase + veiculo.getTaxaFixa();
        
        return new FreteResponse(
            quilometragem,
            veiculo.name(),
            veiculo.getCapacidade(),
            veiculo.getPrecoPorKm(),
            veiculo.getTaxaFixa(),
            valorBase,
            valorTotal
        );
    }

    @QueryMapping
    public String hello() {
        return "Serviço de Frete GraphQL funcionando!";
    }
}

// TipoVeiculo.java
enum TipoVeiculo {
    CAMINHAO(250, 20.0, 200.0),
    CARRETA(1500, 40.0, 400.0);

    private final int capacidade;
    private final double precoPorKm;
    private final double taxaFixa;

    TipoVeiculo(int capacidade, double precoPorKm, double taxaFixa) {
        this.capacidade = capacidade;
        this.precoPorKm = precoPorKm;
        this.taxaFixa = taxaFixa;
    }

    public int getCapacidade() { return capacidade; }
    public double getPrecoPorKm() { return precoPorKm; }
    public double getTaxaFixa() { return taxaFixa; }
}

// FreteResponse.java
public class FreteResponse {
    private int quilometragem;
    private String tipoVeiculo;
    private int capacidade;
    private double precoPorKm;
    private double taxaFixa;
    private double valorBase;
    private double valorTotal;

    public FreteResponse(int quilometragem, String tipoVeiculo, int capacidade, 
                        double precoPorKm, double taxaFixa, double valorBase, double valorTotal) {
        this.quilometragem = quilometragem;
        this.tipoVeiculo = tipoVeiculo;
        this.capacidade = capacidade;
        this.precoPorKm = precoPorKm;
        this.taxaFixa = taxaFixa;
        this.valorBase = valorBase;
        this.valorTotal = valorTotal;
    }

    // Getters
    public int getQuilometragem() { return quilometragem; }
    public String getTipoVeiculo() { return tipoVeiculo; }
    public int getCapacidade() { return capacidade; }
    public double getPrecoPorKm() { return precoPorKm; }
    public double getTaxaFixa() { return taxaFixa; }
    public double getValorBase() { return valorBase; }
    public double getValorTotal() { return valorTotal; }
}

// schema.graphqls (em src/main/resources/graphql/)
type Query {
    calcularFrete(quilometragem: Int!, tipoVeiculo: String!): FreteResponse!
    hello: String!
}

type FreteResponse {
    quilometragem: Int!
    tipoVeiculo: String!
    capacidade: Int!
    precoPorKm: Float!
    taxaFixa: Float!
    valorBase: Float!
    valorTotal: Float!
}

# application.properties
server.port=8082
spring.application.name=frete-service
spring.graphql.graphiql.enabled=true
spring.graphql.graphiql.path=/graphiql

# pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.0</version>
        <relativePath/>
    </parent>
    <groupId>com.frete</groupId>
    <artifactId>frete-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>frete-service</name>
    <description>Serviço de cálculo de frete GraphQL</description>

    <properties>
        <java.version>17</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-graphql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>